#!/bin/bash

./killmirror

# Application banner
figlet -f big 'smart  mirror'

# Get and print web service address
export PORT=8080
case $OSTYPE in
    linux*) # Linux
		if [ "$(whoami)" == "pi" ]
		then
			IFACE="wlan0"
		else
			IFACE="enp0s31f6"
		fi
		export IP=$(/sbin/ifconfig $IFACE | awk '/inet /{print substr($2, 1)}')
        export WEBADDRESS=$IP:$PORT
        ;;
    darwin*) # MacOS
		export IP=$(/sbin/ifconfig en0 | awk '/inet /{print substr($2, 1)}')
        export WEBADDRESS=$IP:$PORT
        ;;
    *)
esac

# Set paths for the config file and Java watcher
export CONFIGPATH=resources/mirror_config.xml
export WATCHPATH=resources
export HOSTNAME=$(hostname)

# Path to JavaFX libraries
if [ "$(whoami)" == "pi" ]
then
	LOAD_FX="--module-path /home/pi/armv6hf-sdk/lib --add-modules javafx.controls,javafx.fxml"
	echo "Loading JavaFX libraries on pi"
fi

# Get arguments
for var in "$@"
do
	case $var in
		"-sw")
			sw="-Dprism.order=sw"
			echo "Using Software Rendering"
			;;
		"-fullscreen")
			fullscreen=$var
			echo "Launching Fullscreen"
			;;
		*)
	esac
done

echo "Debug messages in log.txt"
java $LOAD_FX $sw -jar smart-mirror-1.0.jar $fullscreen & #&> log.txt &
cd web-service
python main.py --path ../resources/mirror_config.xml


