#!/bin/bash

# Kill any running python or java procs
./kill-mirror

# Application banner
figlet -f big 'smart  mirror'

# Get and print web service address
case $OSTYPE in
    linux*) # Linux
        export WEBADDRESS=$(/sbin/ifconfig wlan0 | awk '/inet addr/{print substr($2, 6)}'):8080
        ;;
    darwin*) # MacOS
        export WEBADDRESS=$(/sbin/ifconfig en0 | awk '/inet /{print substr($2, 1)}'):8080
        ;;
    *)
esac

# Set paths for the config file and Java watcher
export CONFIGPATH=resources/mirror_config.xml
export WATCHPATH=resources

echo Web service running on $WEBADDRESS

# Get arguments
for var in "$@"
do
	case $var in
		"-sw")
			sw="-Dprism.order=sw"
			echo "Using Software Rendering"
			;;
		"-fullscreen")
			fullscreen=$var
			echo "Launching Fullscreen"
			;;
        "-console")
            console=true
            ;;
		*)
	esac
done

# Start web service and mirror application
cd web-service
python main.py --path ../resources/mirror_config.xml &
cd ..
if [ "$console" = true ]; then
    echo "Debug messages in console"
    java $sw -jar smart-mirror-1.0.jar $fullscreen
else
    echo "Debug messages in log.txt"
    java $sw -jar smart-mirror-1.0.jar $fullscreen > log.txt
fi

